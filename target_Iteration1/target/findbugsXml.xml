
<BugCollection sequence='0' release='' analysisTimestamp='1514022415341' version='3.0.1' timestamp='1513970663561'><Project projectName='Iteration1'><Jar>C:\Users\Pablo\git\GeoDevelopersISO2\Spotif\Iteration1\target\classes</Jar><AuxClasspathEntry>C:\Users\Pablo\.m2\repository\junit\junit\4.12\junit-4.12.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Pablo\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Pablo\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar</AuxClasspathEntry><SrcDir>C:\Users\Pablo\git\GeoDevelopersISO2\Spotif\Iteration1\src\main\java</SrcDir><WrkDir>C:\Users\Pablo\git\GeoDevelopersISO2\Spotif\Iteration1\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='820ad34e03ecf703d4e2406599965856' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>Domain.Album.getListSongs() may expose internal representation by returning Album.listSongs</LongMessage><Class classname='Domain.Album' primary='true'><SourceLine classname='Domain.Album' start='12' end='43' sourcepath='Domain/Album.java' sourcefile='Album.java'><Message>At Album.java:[lines 12-43]</Message></SourceLine><Message>In class Domain.Album</Message></Class><Method isStatic='false' classname='Domain.Album' signature='()[LDomain/Song;' name='getListSongs' primary='true'><SourceLine endBytecode='46' classname='Domain.Album' start='43' end='43' sourcepath='Domain/Album.java' sourcefile='Album.java' startBytecode='0'></SourceLine><Message>In method Domain.Album.getListSongs()</Message></Method><Field isStatic='false' classname='Domain.Album' signature='[LDomain/Song;' name='listSongs' primary='true'><SourceLine classname='Domain.Album' sourcepath='Domain/Album.java' sourcefile='Album.java'><Message>In Album.java</Message></SourceLine><Message>Field Domain.Album.listSongs</Message></Field><SourceLine endBytecode='4' classname='Domain.Album' start='43' end='43' sourcepath='Domain/Album.java' sourcefile='Album.java' startBytecode='4' primary='true'><Message>At Album.java:[line 43]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a51edff030aa66ab8bbb4b934589479f' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new Domain.Album(String, String, String, double, String, Song[]) may expose internal representation by storing an externally mutable object into Album.listSongs</LongMessage><Class classname='Domain.Album' primary='true'><SourceLine classname='Domain.Album' start='12' end='43' sourcepath='Domain/Album.java' sourcefile='Album.java'><Message>At Album.java:[lines 12-43]</Message></SourceLine><Message>In class Domain.Album</Message></Class><Method isStatic='false' classname='Domain.Album' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;DLjava/lang/String;[LDomain/Song;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='167' classname='Domain.Album' start='12' end='19' sourcepath='Domain/Album.java' sourcefile='Album.java' startBytecode='0'></SourceLine><Message>In method new Domain.Album(String, String, String, double, String, Song[])</Message></Method><Field isStatic='false' classname='Domain.Album' signature='[LDomain/Song;' name='listSongs' primary='true'><SourceLine classname='Domain.Album' sourcepath='Domain/Album.java' sourcefile='Album.java'><Message>In Album.java</Message></SourceLine><Message>Field Domain.Album.listSongs</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='34' name='listSongs' register='7'><Message>Local variable named listSongs</Message></LocalVariable><SourceLine endBytecode='34' classname='Domain.Album' start='18' end='18' sourcepath='Domain/Album.java' sourcefile='Album.java' startBytecode='34' primary='true'><Message>At Album.java:[line 18]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='427b0ffc4d9308c7d6023a88a7a1710' cweid='89' rank='10' abbrev='SQL' category='SECURITY' priority='1' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE' instanceOccurrenceMax='0'><ShortMessage>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortMessage><LongMessage>Domain.DaoAlbum.addAlbum(Album) passes a nonconstant String to an execute or addBatch method on an SQL statement</LongMessage><Class classname='Domain.DaoAlbum' primary='true'><SourceLine classname='Domain.DaoAlbum' start='10' end='26' sourcepath='Domain/DaoAlbum.java' sourcefile='DaoAlbum.java'><Message>At DaoAlbum.java:[lines 10-26]</Message></SourceLine><Message>In class Domain.DaoAlbum</Message></Class><Method isStatic='false' classname='Domain.DaoAlbum' signature='(LDomain/Album;)V' name='addAlbum' primary='true'><SourceLine endBytecode='59' classname='Domain.DaoAlbum' start='14' end='26' sourcepath='Domain/DaoAlbum.java' sourcefile='DaoAlbum.java' startBytecode='0'></SourceLine><Message>In method Domain.DaoAlbum.addAlbum(Album)</Message></Method><SourceLine endBytecode='89' classname='Domain.DaoAlbum' start='17' end='17' sourcepath='Domain/DaoAlbum.java' sourcefile='DaoAlbum.java' startBytecode='89' primary='true'><Message>At DaoAlbum.java:[line 17]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f0a02549671a0bb3cca70faf166b32a9' cweid='89' rank='10' abbrev='SQL' category='SECURITY' priority='1' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE' instanceOccurrenceMax='0'><ShortMessage>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortMessage><LongMessage>Domain.DaoSong.addSong(Song) passes a nonconstant String to an execute or addBatch method on an SQL statement</LongMessage><Class classname='Domain.DaoSong' primary='true'><SourceLine classname='Domain.DaoSong' start='7' end='24' sourcepath='Domain/DaoSong.java' sourcefile='DaoSong.java'><Message>At DaoSong.java:[lines 7-24]</Message></SourceLine><Message>In class Domain.DaoSong</Message></Class><Method isStatic='false' classname='Domain.DaoSong' signature='(LDomain/Song;)V' name='addSong' primary='true'><SourceLine endBytecode='59' classname='Domain.DaoSong' start='11' end='24' sourcepath='Domain/DaoSong.java' sourcefile='DaoSong.java' startBytecode='0'></SourceLine><Message>In method Domain.DaoSong.addSong(Song)</Message></Method><SourceLine endBytecode='89' classname='Domain.DaoSong' start='14' end='14' sourcepath='Domain/DaoSong.java' sourcefile='DaoSong.java' startBytecode='89' primary='true'><Message>At DaoSong.java:[line 14]</Message></SourceLine></BugInstance><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='89' abbrev='SQL' category='SECURITY' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE'><ShortDescription>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortDescription><Details>

  &lt;p&gt;The method invokes the execute or addBatch method on an SQL statement with a String that seems
to be dynamically generated. Consider using
a prepared statement instead. It is more efficient and less vulnerable to
SQL injection attacks.
&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><BugCode abbrev='SQL'><Description>Potential SQL Problem</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='3' total_classes='7' priority_1='2' priority_2='2' total_size='131' clock_seconds='6.03' referenced_classes='32' vm_version='25.71-b15' total_bugs='4' java_version='1.8.0_71' gc_seconds='0.08' alloc_mbytes='455.50' cpu_seconds='16.92' peak_mbytes='141.43' timestamp='Fri, 22 Dec 2017 20:24:23 +0100'><FileStats path='Domain/Album.java' size='28' bugHash='609df5fd53482c5669c991986534a7a6' bugCount='2'></FileStats><FileStats path='Domain/DaoAlbum.java' size='15' bugHash='3f8c1b6a78f311b438f1ebea67b32416' bugCount='1'></FileStats><FileStats path='Domain/DaoSong.java' size='16' bugHash='41fd16c8139aa1f63231b2bcd847b3ad' bugCount='1'></FileStats><FileStats path='Domain/Song.java' size='24' bugCount='0'></FileStats><FileStats path='Persistence/DBBroker.java' size='8' bugCount='0'></FileStats><FileStats path='Presentation/AppInterface.java' size='40' bugCount='0'></FileStats><PackageStats package='Domain' priority_1='2' total_bugs='4' priority_2='2' total_size='83' total_types='4'><ClassStats bugs='2' size='28' priority_2='2' interface='false' sourceFile='Album.java' class='Domain.Album'></ClassStats><ClassStats bugs='1' size='15' priority_1='1' interface='false' sourceFile='DaoAlbum.java' class='Domain.DaoAlbum'></ClassStats><ClassStats bugs='1' size='16' priority_1='1' interface='false' sourceFile='DaoSong.java' class='Domain.DaoSong'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='Song.java' class='Domain.Song'></ClassStats></PackageStats><PackageStats package='Persistence' total_bugs='0' total_size='8' total_types='1'><ClassStats bugs='0' size='8' interface='false' sourceFile='DBBroker.java' class='Persistence.DBBroker'></ClassStats></PackageStats><PackageStats package='Presentation' total_bugs='0' total_size='40' total_types='2'><ClassStats bugs='0' size='30' interface='false' sourceFile='AppInterface.java' class='Presentation.AppInterface'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='AppInterface.java' class='Presentation.AppInterface$1'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='2079' totalMilliseconds='1324' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' standardDeviationMircosecondsPerInvocation='2574' maxMicrosecondsPerInvocation='30871' invocations='637'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1140' totalMilliseconds='725' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' standardDeviationMircosecondsPerInvocation='3528' maxMicrosecondsPerInvocation='49524' invocations='636'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='7243' totalMilliseconds='231' name='edu.umd.cs.findbugs.detect.FieldItemSummary' standardDeviationMircosecondsPerInvocation='13718' maxMicrosecondsPerInvocation='54844' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='6818' totalMilliseconds='218' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' standardDeviationMircosecondsPerInvocation='15169' maxMicrosecondsPerInvocation='64872' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='277' totalMilliseconds='167' name='edu.umd.cs.findbugs.util.TopologicalSort' standardDeviationMircosecondsPerInvocation='1760' maxMicrosecondsPerInvocation='41807' invocations='604'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='855' totalMilliseconds='140' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' standardDeviationMircosecondsPerInvocation='1104' maxMicrosecondsPerInvocation='8387' invocations='164'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3985' totalMilliseconds='103' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' standardDeviationMircosecondsPerInvocation='18376' maxMicrosecondsPerInvocation='95844' invocations='26'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3014' totalMilliseconds='96' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' standardDeviationMircosecondsPerInvocation='7337' maxMicrosecondsPerInvocation='38505' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2838' totalMilliseconds='90' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' standardDeviationMircosecondsPerInvocation='9469' maxMicrosecondsPerInvocation='47666' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1287' totalMilliseconds='79' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' standardDeviationMircosecondsPerInvocation='4024' maxMicrosecondsPerInvocation='29858' invocations='62'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2375' totalMilliseconds='76' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' standardDeviationMircosecondsPerInvocation='5312' maxMicrosecondsPerInvocation='27918' invocations='32'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>