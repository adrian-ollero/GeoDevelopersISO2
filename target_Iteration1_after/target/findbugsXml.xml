
<BugCollection sequence='0' release='' analysisTimestamp='1514083492046' version='3.0.1' timestamp='1514081027792'><Project projectName='Iteration1'><Jar>C:\Users\Pablo\git\GeoDevelopersISO2\Spotif\Iteration1\target\classes</Jar><AuxClasspathEntry>C:\Users\Pablo\.m2\repository\junit\junit\4.12\junit-4.12.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Pablo\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Pablo\.m2\repository\mysql\mysql-connector-java\5.1.6\mysql-connector-java-5.1.6.jar</AuxClasspathEntry><SrcDir>C:\Users\Pablo\git\GeoDevelopersISO2\Spotif\Iteration1\src\main\java</SrcDir><WrkDir>C:\Users\Pablo\git\GeoDevelopersISO2\Spotif\Iteration1\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='f1f636898407cb660c0d6f92bd91801b' cweid='374' rank='18' abbrev='EI' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by returning reference to mutable object</ShortMessage><LongMessage>domain.Album.getListSongs() may expose internal representation by returning Album.listSongs</LongMessage><Class classname='domain.Album' primary='true'><SourceLine classname='domain.Album' start='42' end='91' sourcepath='domain/Album.java' sourcefile='Album.java'><Message>At Album.java:[lines 42-91]</Message></SourceLine><Message>In class domain.Album</Message></Class><Method isStatic='false' classname='domain.Album' signature='()[Ldomain/Song;' name='getListSongs' primary='true'><SourceLine endBytecode='46' classname='domain.Album' start='91' end='91' sourcepath='domain/Album.java' sourcefile='Album.java' startBytecode='0'></SourceLine><Message>In method domain.Album.getListSongs()</Message></Method><Field isStatic='false' classname='domain.Album' signature='[Ldomain/Song;' name='listSongs' primary='true'><SourceLine classname='domain.Album' sourcepath='domain/Album.java' sourcefile='Album.java'><Message>In Album.java</Message></SourceLine><Message>Field domain.Album.listSongs</Message></Field><SourceLine endBytecode='4' classname='domain.Album' start='91' end='91' sourcepath='domain/Album.java' sourcefile='Album.java' startBytecode='4' primary='true'><Message>At Album.java:[line 91]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='77ec5660774849d2fd59c8a502e01f83' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new domain.Album(String, String, String, double, String, Song[]) may expose internal representation by storing an externally mutable object into Album.listSongs</LongMessage><Class classname='domain.Album' primary='true'><SourceLine classname='domain.Album' start='42' end='91' sourcepath='domain/Album.java' sourcefile='Album.java'><Message>At Album.java:[lines 42-91]</Message></SourceLine><Message>In class domain.Album</Message></Class><Method isStatic='false' classname='domain.Album' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;DLjava/lang/String;[Ldomain/Song;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='167' classname='domain.Album' start='42' end='49' sourcepath='domain/Album.java' sourcefile='Album.java' startBytecode='0'></SourceLine><Message>In method new domain.Album(String, String, String, double, String, Song[])</Message></Method><Field isStatic='false' classname='domain.Album' signature='[Ldomain/Song;' name='listSongs' primary='true'><SourceLine classname='domain.Album' sourcepath='domain/Album.java' sourcefile='Album.java'><Message>In Album.java</Message></SourceLine><Message>Field domain.Album.listSongs</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='34' name='listSongs' register='7'><Message>Local variable named listSongs</Message></LocalVariable><SourceLine endBytecode='34' classname='domain.Album' start='48' end='48' sourcepath='domain/Album.java' sourcefile='Album.java' startBytecode='34' primary='true'><Message>At Album.java:[line 48]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f1805ea943eacffae8458d72b1954dc6' cweid='89' rank='10' abbrev='SQL' category='SECURITY' priority='1' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE' instanceOccurrenceMax='0'><ShortMessage>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortMessage><LongMessage>domain.DaoAlbum.addAlbum(Album) passes a nonconstant String to an execute or addBatch method on an SQL statement</LongMessage><Class classname='domain.DaoAlbum' primary='true'><SourceLine classname='domain.DaoAlbum' start='14' end='33' sourcepath='domain/DaoAlbum.java' sourcefile='DaoAlbum.java'><Message>At DaoAlbum.java:[lines 14-33]</Message></SourceLine><Message>In class domain.DaoAlbum</Message></Class><Method isStatic='false' classname='domain.DaoAlbum' signature='(Ldomain/Album;)V' name='addAlbum' primary='true'><SourceLine endBytecode='59' classname='domain.DaoAlbum' start='21' end='33' sourcepath='domain/DaoAlbum.java' sourcefile='DaoAlbum.java' startBytecode='0'></SourceLine><Message>In method domain.DaoAlbum.addAlbum(Album)</Message></Method><SourceLine endBytecode='89' classname='domain.DaoAlbum' start='24' end='24' sourcepath='domain/DaoAlbum.java' sourcefile='DaoAlbum.java' startBytecode='89' primary='true'><Message>At DaoAlbum.java:[line 24]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='727a9b5ab91300c39fc8778596f7685f' cweid='89' rank='10' abbrev='SQL' category='SECURITY' priority='1' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE' instanceOccurrenceMax='0'><ShortMessage>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortMessage><LongMessage>domain.DaoSong.addSong(Song) passes a nonconstant String to an execute or addBatch method on an SQL statement</LongMessage><Class classname='domain.DaoSong' primary='true'><SourceLine classname='domain.DaoSong' start='12' end='32' sourcepath='domain/DaoSong.java' sourcefile='DaoSong.java'><Message>At DaoSong.java:[lines 12-32]</Message></SourceLine><Message>In class domain.DaoSong</Message></Class><Method isStatic='false' classname='domain.DaoSong' signature='(Ldomain/Song;)V' name='addSong' primary='true'><SourceLine endBytecode='59' classname='domain.DaoSong' start='19' end='32' sourcepath='domain/DaoSong.java' sourcefile='DaoSong.java' startBytecode='0'></SourceLine><Message>In method domain.DaoSong.addSong(Song)</Message></Method><SourceLine endBytecode='89' classname='domain.DaoSong' start='22' end='22' sourcepath='domain/DaoSong.java' sourcefile='DaoSong.java' startBytecode='89' primary='true'><Message>At DaoSong.java:[line 22]</Message></SourceLine></BugInstance><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='374' abbrev='EI' category='MALICIOUS_CODE' type='EI_EXPOSE_REP'><ShortDescription>May expose internal representation by returning reference to mutable object</ShortDescription><Details>

  &lt;p&gt; Returning a reference to a mutable object value stored in one of the object's fields
  exposes the internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Returning a new copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='89' abbrev='SQL' category='SECURITY' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE'><ShortDescription>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortDescription><Details>

  &lt;p&gt;The method invokes the execute or addBatch method on an SQL statement with a String that seems
to be dynamically generated. Consider using
a prepared statement instead. It is more efficient and less vulnerable to
SQL injection attacks.
&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='EI'><Description>Method returning array may expose internal representation</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><BugCode abbrev='SQL'><Description>Potential SQL Problem</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='3' total_classes='7' priority_1='2' priority_2='2' total_size='148' clock_seconds='5.31' referenced_classes='32' vm_version='25.71-b15' total_bugs='4' java_version='1.8.0_71' gc_seconds='0.09' alloc_mbytes='455.50' cpu_seconds='16.64' peak_mbytes='126.93' timestamp='Sun, 24 Dec 2017 03:03:47 +0100'><FileStats path='Presentation/AppInterface.java' size='57' bugCount='0'></FileStats><FileStats path='domain/Album.java' size='28' bugHash='830ca7eb65d7871023db47df6437d15d' bugCount='2'></FileStats><FileStats path='domain/DaoAlbum.java' size='15' bugHash='9f9822c5bbd8f6d6f76db49e8a94c917' bugCount='1'></FileStats><FileStats path='domain/DaoSong.java' size='16' bugHash='fef740feb87850db76d938d9d9970d95' bugCount='1'></FileStats><FileStats path='domain/Song.java' size='24' bugCount='0'></FileStats><FileStats path='persistence/DBBroker.java' size='8' bugCount='0'></FileStats><PackageStats package='Presentation' total_bugs='0' total_size='57' total_types='2'><ClassStats bugs='0' size='47' interface='false' sourceFile='AppInterface.java' class='Presentation.AppInterface'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='AppInterface.java' class='Presentation.AppInterface$1'></ClassStats></PackageStats><PackageStats package='domain' priority_1='2' total_bugs='4' priority_2='2' total_size='83' total_types='4'><ClassStats bugs='2' size='28' priority_2='2' interface='false' sourceFile='Album.java' class='domain.Album'></ClassStats><ClassStats bugs='1' size='15' priority_1='1' interface='false' sourceFile='DaoAlbum.java' class='domain.DaoAlbum'></ClassStats><ClassStats bugs='1' size='16' priority_1='1' interface='false' sourceFile='DaoSong.java' class='domain.DaoSong'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='Song.java' class='domain.Song'></ClassStats></PackageStats><PackageStats package='persistence' total_bugs='0' total_size='8' total_types='1'><ClassStats bugs='0' size='8' interface='false' sourceFile='DBBroker.java' class='persistence.DBBroker'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='1726' totalMilliseconds='1099' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' standardDeviationMircosecondsPerInvocation='902' maxMicrosecondsPerInvocation='8334' invocations='637'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1209' totalMilliseconds='769' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' standardDeviationMircosecondsPerInvocation='2673' maxMicrosecondsPerInvocation='38352' invocations='636'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='9068' totalMilliseconds='290' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' standardDeviationMircosecondsPerInvocation='23499' maxMicrosecondsPerInvocation='115982' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='7425' totalMilliseconds='237' name='edu.umd.cs.findbugs.detect.FieldItemSummary' standardDeviationMircosecondsPerInvocation='11401' maxMicrosecondsPerInvocation='41363' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='346' totalMilliseconds='209' name='edu.umd.cs.findbugs.util.TopologicalSort' standardDeviationMircosecondsPerInvocation='2438' maxMicrosecondsPerInvocation='50057' invocations='604'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1264' totalMilliseconds='207' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' standardDeviationMircosecondsPerInvocation='3957' maxMicrosecondsPerInvocation='49698' invocations='164'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='4036' totalMilliseconds='104' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' standardDeviationMircosecondsPerInvocation='18214' maxMicrosecondsPerInvocation='95077' invocations='26'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3170' totalMilliseconds='101' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' standardDeviationMircosecondsPerInvocation='10488' maxMicrosecondsPerInvocation='47418' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1497' totalMilliseconds='92' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' standardDeviationMircosecondsPerInvocation='4829' maxMicrosecondsPerInvocation='36257' invocations='62'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2785' totalMilliseconds='89' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' standardDeviationMircosecondsPerInvocation='4527' maxMicrosecondsPerInvocation='17301' invocations='32'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3235' totalMilliseconds='84' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' standardDeviationMircosecondsPerInvocation='6385' maxMicrosecondsPerInvocation='26104' invocations='26'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2793' totalMilliseconds='78' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' standardDeviationMircosecondsPerInvocation='5001' maxMicrosecondsPerInvocation='24808' invocations='28'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2154' totalMilliseconds='60' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' standardDeviationMircosecondsPerInvocation='4651' maxMicrosecondsPerInvocation='24639' invocations='28'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>